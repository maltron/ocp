- name: "Create Project/Namespace {{ servicemesh_namespace }}"
  command: "{{ oc_client }} new-project {{ servicemesh_namespace }}"
  ignore_errors: True

- name: "Create all the necessary Operators needed"
  command: "{{ oc_client }} apply --filename={{ inventory_dir }}/roles/ocp_create_ossm/defaults/operators.yaml"
  ignore_errors: True
  tags: [ operator ]

- name: "Fetching the Service Mesh Operator Version"
  command: "{{ oc_client }} get clusterserviceversion --output jsonpath='{.items[*].metadata.name}' --namespace {{ servicemesh_namespace }}"
  register: clusterserviceversion
  until: clusterserviceversion.rc == 0 and clusterserviceversion.stdout|regex_search(servicemesh_pattern)
  retries: 20
  delay: 20
  ignore_errors: True
  tags: [ operator ]

- name: "Service Mesh Found: {{ clusterserviceversion.stdout | regex_search(servicemesh_pattern) }}"
  set_fact: servicemeshoperatorversion={{ clusterserviceversion.stdout | regex_search(servicemesh_pattern) }}
  tags: [ operator ]

- name: "Waiting for Istio System to be ready"
  command: "{{ oc_client }} get clusterserviceversion/{{ servicemeshoperatorversion }} --namespace {{ servicemesh_namespace }} -o jsonpath='{.status.phase}'"
  register: operator_status
  until: operator_status.rc == 0 and operator_status.stdout == "Succeeded"
  retries: 5
  delay: 60
  ignore_errors: True

- name: "Creating Istio Control Plane on ossm-system namespace"
  command: "{{ oc_client }} apply --filename={{ inventory_dir }}/roles/ocp_create_ossm/defaults/ossm.yaml --namespace {{ servicemesh_namespace }}"
  ignore_errors: True
